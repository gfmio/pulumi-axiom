// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package axiom

import (
	"context"
	"reflect"

	"github.com/gfmio/pulumi-axiom/sdk/go/axiom/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type NotifierProperties struct {
	Discord        *NotifierPropertiesDiscord        `pulumi:"discord"`
	DiscordWebhook *NotifierPropertiesDiscordWebhook `pulumi:"discordWebhook"`
	Email          *NotifierPropertiesEmail          `pulumi:"email"`
	Opsgenie       *NotifierPropertiesOpsgenie       `pulumi:"opsgenie"`
	Pagerduty      *NotifierPropertiesPagerduty      `pulumi:"pagerduty"`
	Slack          *NotifierPropertiesSlack          `pulumi:"slack"`
	Webhook        *NotifierPropertiesWebhook        `pulumi:"webhook"`
}

// NotifierPropertiesInput is an input type that accepts NotifierPropertiesArgs and NotifierPropertiesOutput values.
// You can construct a concrete instance of `NotifierPropertiesInput` via:
//
//	NotifierPropertiesArgs{...}
type NotifierPropertiesInput interface {
	pulumi.Input

	ToNotifierPropertiesOutput() NotifierPropertiesOutput
	ToNotifierPropertiesOutputWithContext(context.Context) NotifierPropertiesOutput
}

type NotifierPropertiesArgs struct {
	Discord        NotifierPropertiesDiscordPtrInput        `pulumi:"discord"`
	DiscordWebhook NotifierPropertiesDiscordWebhookPtrInput `pulumi:"discordWebhook"`
	Email          NotifierPropertiesEmailPtrInput          `pulumi:"email"`
	Opsgenie       NotifierPropertiesOpsgeniePtrInput       `pulumi:"opsgenie"`
	Pagerduty      NotifierPropertiesPagerdutyPtrInput      `pulumi:"pagerduty"`
	Slack          NotifierPropertiesSlackPtrInput          `pulumi:"slack"`
	Webhook        NotifierPropertiesWebhookPtrInput        `pulumi:"webhook"`
}

func (NotifierPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifierProperties)(nil)).Elem()
}

func (i NotifierPropertiesArgs) ToNotifierPropertiesOutput() NotifierPropertiesOutput {
	return i.ToNotifierPropertiesOutputWithContext(context.Background())
}

func (i NotifierPropertiesArgs) ToNotifierPropertiesOutputWithContext(ctx context.Context) NotifierPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesOutput)
}

func (i NotifierPropertiesArgs) ToNotifierPropertiesPtrOutput() NotifierPropertiesPtrOutput {
	return i.ToNotifierPropertiesPtrOutputWithContext(context.Background())
}

func (i NotifierPropertiesArgs) ToNotifierPropertiesPtrOutputWithContext(ctx context.Context) NotifierPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesOutput).ToNotifierPropertiesPtrOutputWithContext(ctx)
}

// NotifierPropertiesPtrInput is an input type that accepts NotifierPropertiesArgs, NotifierPropertiesPtr and NotifierPropertiesPtrOutput values.
// You can construct a concrete instance of `NotifierPropertiesPtrInput` via:
//
//	        NotifierPropertiesArgs{...}
//
//	or:
//
//	        nil
type NotifierPropertiesPtrInput interface {
	pulumi.Input

	ToNotifierPropertiesPtrOutput() NotifierPropertiesPtrOutput
	ToNotifierPropertiesPtrOutputWithContext(context.Context) NotifierPropertiesPtrOutput
}

type notifierPropertiesPtrType NotifierPropertiesArgs

func NotifierPropertiesPtr(v *NotifierPropertiesArgs) NotifierPropertiesPtrInput {
	return (*notifierPropertiesPtrType)(v)
}

func (*notifierPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifierProperties)(nil)).Elem()
}

func (i *notifierPropertiesPtrType) ToNotifierPropertiesPtrOutput() NotifierPropertiesPtrOutput {
	return i.ToNotifierPropertiesPtrOutputWithContext(context.Background())
}

func (i *notifierPropertiesPtrType) ToNotifierPropertiesPtrOutputWithContext(ctx context.Context) NotifierPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesPtrOutput)
}

type NotifierPropertiesOutput struct{ *pulumi.OutputState }

func (NotifierPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifierProperties)(nil)).Elem()
}

func (o NotifierPropertiesOutput) ToNotifierPropertiesOutput() NotifierPropertiesOutput {
	return o
}

func (o NotifierPropertiesOutput) ToNotifierPropertiesOutputWithContext(ctx context.Context) NotifierPropertiesOutput {
	return o
}

func (o NotifierPropertiesOutput) ToNotifierPropertiesPtrOutput() NotifierPropertiesPtrOutput {
	return o.ToNotifierPropertiesPtrOutputWithContext(context.Background())
}

func (o NotifierPropertiesOutput) ToNotifierPropertiesPtrOutputWithContext(ctx context.Context) NotifierPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotifierProperties) *NotifierProperties {
		return &v
	}).(NotifierPropertiesPtrOutput)
}

func (o NotifierPropertiesOutput) Discord() NotifierPropertiesDiscordPtrOutput {
	return o.ApplyT(func(v NotifierProperties) *NotifierPropertiesDiscord { return v.Discord }).(NotifierPropertiesDiscordPtrOutput)
}

func (o NotifierPropertiesOutput) DiscordWebhook() NotifierPropertiesDiscordWebhookPtrOutput {
	return o.ApplyT(func(v NotifierProperties) *NotifierPropertiesDiscordWebhook { return v.DiscordWebhook }).(NotifierPropertiesDiscordWebhookPtrOutput)
}

func (o NotifierPropertiesOutput) Email() NotifierPropertiesEmailPtrOutput {
	return o.ApplyT(func(v NotifierProperties) *NotifierPropertiesEmail { return v.Email }).(NotifierPropertiesEmailPtrOutput)
}

func (o NotifierPropertiesOutput) Opsgenie() NotifierPropertiesOpsgeniePtrOutput {
	return o.ApplyT(func(v NotifierProperties) *NotifierPropertiesOpsgenie { return v.Opsgenie }).(NotifierPropertiesOpsgeniePtrOutput)
}

func (o NotifierPropertiesOutput) Pagerduty() NotifierPropertiesPagerdutyPtrOutput {
	return o.ApplyT(func(v NotifierProperties) *NotifierPropertiesPagerduty { return v.Pagerduty }).(NotifierPropertiesPagerdutyPtrOutput)
}

func (o NotifierPropertiesOutput) Slack() NotifierPropertiesSlackPtrOutput {
	return o.ApplyT(func(v NotifierProperties) *NotifierPropertiesSlack { return v.Slack }).(NotifierPropertiesSlackPtrOutput)
}

func (o NotifierPropertiesOutput) Webhook() NotifierPropertiesWebhookPtrOutput {
	return o.ApplyT(func(v NotifierProperties) *NotifierPropertiesWebhook { return v.Webhook }).(NotifierPropertiesWebhookPtrOutput)
}

type NotifierPropertiesPtrOutput struct{ *pulumi.OutputState }

func (NotifierPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifierProperties)(nil)).Elem()
}

func (o NotifierPropertiesPtrOutput) ToNotifierPropertiesPtrOutput() NotifierPropertiesPtrOutput {
	return o
}

func (o NotifierPropertiesPtrOutput) ToNotifierPropertiesPtrOutputWithContext(ctx context.Context) NotifierPropertiesPtrOutput {
	return o
}

func (o NotifierPropertiesPtrOutput) Elem() NotifierPropertiesOutput {
	return o.ApplyT(func(v *NotifierProperties) NotifierProperties {
		if v != nil {
			return *v
		}
		var ret NotifierProperties
		return ret
	}).(NotifierPropertiesOutput)
}

func (o NotifierPropertiesPtrOutput) Discord() NotifierPropertiesDiscordPtrOutput {
	return o.ApplyT(func(v *NotifierProperties) *NotifierPropertiesDiscord {
		if v == nil {
			return nil
		}
		return v.Discord
	}).(NotifierPropertiesDiscordPtrOutput)
}

func (o NotifierPropertiesPtrOutput) DiscordWebhook() NotifierPropertiesDiscordWebhookPtrOutput {
	return o.ApplyT(func(v *NotifierProperties) *NotifierPropertiesDiscordWebhook {
		if v == nil {
			return nil
		}
		return v.DiscordWebhook
	}).(NotifierPropertiesDiscordWebhookPtrOutput)
}

func (o NotifierPropertiesPtrOutput) Email() NotifierPropertiesEmailPtrOutput {
	return o.ApplyT(func(v *NotifierProperties) *NotifierPropertiesEmail {
		if v == nil {
			return nil
		}
		return v.Email
	}).(NotifierPropertiesEmailPtrOutput)
}

func (o NotifierPropertiesPtrOutput) Opsgenie() NotifierPropertiesOpsgeniePtrOutput {
	return o.ApplyT(func(v *NotifierProperties) *NotifierPropertiesOpsgenie {
		if v == nil {
			return nil
		}
		return v.Opsgenie
	}).(NotifierPropertiesOpsgeniePtrOutput)
}

func (o NotifierPropertiesPtrOutput) Pagerduty() NotifierPropertiesPagerdutyPtrOutput {
	return o.ApplyT(func(v *NotifierProperties) *NotifierPropertiesPagerduty {
		if v == nil {
			return nil
		}
		return v.Pagerduty
	}).(NotifierPropertiesPagerdutyPtrOutput)
}

func (o NotifierPropertiesPtrOutput) Slack() NotifierPropertiesSlackPtrOutput {
	return o.ApplyT(func(v *NotifierProperties) *NotifierPropertiesSlack {
		if v == nil {
			return nil
		}
		return v.Slack
	}).(NotifierPropertiesSlackPtrOutput)
}

func (o NotifierPropertiesPtrOutput) Webhook() NotifierPropertiesWebhookPtrOutput {
	return o.ApplyT(func(v *NotifierProperties) *NotifierPropertiesWebhook {
		if v == nil {
			return nil
		}
		return v.Webhook
	}).(NotifierPropertiesWebhookPtrOutput)
}

type NotifierPropertiesDiscord struct {
	// The discord channel
	DiscordChannel string `pulumi:"discordChannel"`
	// The discord token
	DiscordToken string `pulumi:"discordToken"`
}

// NotifierPropertiesDiscordInput is an input type that accepts NotifierPropertiesDiscordArgs and NotifierPropertiesDiscordOutput values.
// You can construct a concrete instance of `NotifierPropertiesDiscordInput` via:
//
//	NotifierPropertiesDiscordArgs{...}
type NotifierPropertiesDiscordInput interface {
	pulumi.Input

	ToNotifierPropertiesDiscordOutput() NotifierPropertiesDiscordOutput
	ToNotifierPropertiesDiscordOutputWithContext(context.Context) NotifierPropertiesDiscordOutput
}

type NotifierPropertiesDiscordArgs struct {
	// The discord channel
	DiscordChannel pulumi.StringInput `pulumi:"discordChannel"`
	// The discord token
	DiscordToken pulumi.StringInput `pulumi:"discordToken"`
}

func (NotifierPropertiesDiscordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifierPropertiesDiscord)(nil)).Elem()
}

func (i NotifierPropertiesDiscordArgs) ToNotifierPropertiesDiscordOutput() NotifierPropertiesDiscordOutput {
	return i.ToNotifierPropertiesDiscordOutputWithContext(context.Background())
}

func (i NotifierPropertiesDiscordArgs) ToNotifierPropertiesDiscordOutputWithContext(ctx context.Context) NotifierPropertiesDiscordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesDiscordOutput)
}

func (i NotifierPropertiesDiscordArgs) ToNotifierPropertiesDiscordPtrOutput() NotifierPropertiesDiscordPtrOutput {
	return i.ToNotifierPropertiesDiscordPtrOutputWithContext(context.Background())
}

func (i NotifierPropertiesDiscordArgs) ToNotifierPropertiesDiscordPtrOutputWithContext(ctx context.Context) NotifierPropertiesDiscordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesDiscordOutput).ToNotifierPropertiesDiscordPtrOutputWithContext(ctx)
}

// NotifierPropertiesDiscordPtrInput is an input type that accepts NotifierPropertiesDiscordArgs, NotifierPropertiesDiscordPtr and NotifierPropertiesDiscordPtrOutput values.
// You can construct a concrete instance of `NotifierPropertiesDiscordPtrInput` via:
//
//	        NotifierPropertiesDiscordArgs{...}
//
//	or:
//
//	        nil
type NotifierPropertiesDiscordPtrInput interface {
	pulumi.Input

	ToNotifierPropertiesDiscordPtrOutput() NotifierPropertiesDiscordPtrOutput
	ToNotifierPropertiesDiscordPtrOutputWithContext(context.Context) NotifierPropertiesDiscordPtrOutput
}

type notifierPropertiesDiscordPtrType NotifierPropertiesDiscordArgs

func NotifierPropertiesDiscordPtr(v *NotifierPropertiesDiscordArgs) NotifierPropertiesDiscordPtrInput {
	return (*notifierPropertiesDiscordPtrType)(v)
}

func (*notifierPropertiesDiscordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifierPropertiesDiscord)(nil)).Elem()
}

func (i *notifierPropertiesDiscordPtrType) ToNotifierPropertiesDiscordPtrOutput() NotifierPropertiesDiscordPtrOutput {
	return i.ToNotifierPropertiesDiscordPtrOutputWithContext(context.Background())
}

func (i *notifierPropertiesDiscordPtrType) ToNotifierPropertiesDiscordPtrOutputWithContext(ctx context.Context) NotifierPropertiesDiscordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesDiscordPtrOutput)
}

type NotifierPropertiesDiscordOutput struct{ *pulumi.OutputState }

func (NotifierPropertiesDiscordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifierPropertiesDiscord)(nil)).Elem()
}

func (o NotifierPropertiesDiscordOutput) ToNotifierPropertiesDiscordOutput() NotifierPropertiesDiscordOutput {
	return o
}

func (o NotifierPropertiesDiscordOutput) ToNotifierPropertiesDiscordOutputWithContext(ctx context.Context) NotifierPropertiesDiscordOutput {
	return o
}

func (o NotifierPropertiesDiscordOutput) ToNotifierPropertiesDiscordPtrOutput() NotifierPropertiesDiscordPtrOutput {
	return o.ToNotifierPropertiesDiscordPtrOutputWithContext(context.Background())
}

func (o NotifierPropertiesDiscordOutput) ToNotifierPropertiesDiscordPtrOutputWithContext(ctx context.Context) NotifierPropertiesDiscordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotifierPropertiesDiscord) *NotifierPropertiesDiscord {
		return &v
	}).(NotifierPropertiesDiscordPtrOutput)
}

// The discord channel
func (o NotifierPropertiesDiscordOutput) DiscordChannel() pulumi.StringOutput {
	return o.ApplyT(func(v NotifierPropertiesDiscord) string { return v.DiscordChannel }).(pulumi.StringOutput)
}

// The discord token
func (o NotifierPropertiesDiscordOutput) DiscordToken() pulumi.StringOutput {
	return o.ApplyT(func(v NotifierPropertiesDiscord) string { return v.DiscordToken }).(pulumi.StringOutput)
}

type NotifierPropertiesDiscordPtrOutput struct{ *pulumi.OutputState }

func (NotifierPropertiesDiscordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifierPropertiesDiscord)(nil)).Elem()
}

func (o NotifierPropertiesDiscordPtrOutput) ToNotifierPropertiesDiscordPtrOutput() NotifierPropertiesDiscordPtrOutput {
	return o
}

func (o NotifierPropertiesDiscordPtrOutput) ToNotifierPropertiesDiscordPtrOutputWithContext(ctx context.Context) NotifierPropertiesDiscordPtrOutput {
	return o
}

func (o NotifierPropertiesDiscordPtrOutput) Elem() NotifierPropertiesDiscordOutput {
	return o.ApplyT(func(v *NotifierPropertiesDiscord) NotifierPropertiesDiscord {
		if v != nil {
			return *v
		}
		var ret NotifierPropertiesDiscord
		return ret
	}).(NotifierPropertiesDiscordOutput)
}

// The discord channel
func (o NotifierPropertiesDiscordPtrOutput) DiscordChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotifierPropertiesDiscord) *string {
		if v == nil {
			return nil
		}
		return &v.DiscordChannel
	}).(pulumi.StringPtrOutput)
}

// The discord token
func (o NotifierPropertiesDiscordPtrOutput) DiscordToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotifierPropertiesDiscord) *string {
		if v == nil {
			return nil
		}
		return &v.DiscordToken
	}).(pulumi.StringPtrOutput)
}

type NotifierPropertiesDiscordWebhook struct {
	// The discord webhook URL
	DiscordWebhookUrl string `pulumi:"discordWebhookUrl"`
}

// NotifierPropertiesDiscordWebhookInput is an input type that accepts NotifierPropertiesDiscordWebhookArgs and NotifierPropertiesDiscordWebhookOutput values.
// You can construct a concrete instance of `NotifierPropertiesDiscordWebhookInput` via:
//
//	NotifierPropertiesDiscordWebhookArgs{...}
type NotifierPropertiesDiscordWebhookInput interface {
	pulumi.Input

	ToNotifierPropertiesDiscordWebhookOutput() NotifierPropertiesDiscordWebhookOutput
	ToNotifierPropertiesDiscordWebhookOutputWithContext(context.Context) NotifierPropertiesDiscordWebhookOutput
}

type NotifierPropertiesDiscordWebhookArgs struct {
	// The discord webhook URL
	DiscordWebhookUrl pulumi.StringInput `pulumi:"discordWebhookUrl"`
}

func (NotifierPropertiesDiscordWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifierPropertiesDiscordWebhook)(nil)).Elem()
}

func (i NotifierPropertiesDiscordWebhookArgs) ToNotifierPropertiesDiscordWebhookOutput() NotifierPropertiesDiscordWebhookOutput {
	return i.ToNotifierPropertiesDiscordWebhookOutputWithContext(context.Background())
}

func (i NotifierPropertiesDiscordWebhookArgs) ToNotifierPropertiesDiscordWebhookOutputWithContext(ctx context.Context) NotifierPropertiesDiscordWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesDiscordWebhookOutput)
}

func (i NotifierPropertiesDiscordWebhookArgs) ToNotifierPropertiesDiscordWebhookPtrOutput() NotifierPropertiesDiscordWebhookPtrOutput {
	return i.ToNotifierPropertiesDiscordWebhookPtrOutputWithContext(context.Background())
}

func (i NotifierPropertiesDiscordWebhookArgs) ToNotifierPropertiesDiscordWebhookPtrOutputWithContext(ctx context.Context) NotifierPropertiesDiscordWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesDiscordWebhookOutput).ToNotifierPropertiesDiscordWebhookPtrOutputWithContext(ctx)
}

// NotifierPropertiesDiscordWebhookPtrInput is an input type that accepts NotifierPropertiesDiscordWebhookArgs, NotifierPropertiesDiscordWebhookPtr and NotifierPropertiesDiscordWebhookPtrOutput values.
// You can construct a concrete instance of `NotifierPropertiesDiscordWebhookPtrInput` via:
//
//	        NotifierPropertiesDiscordWebhookArgs{...}
//
//	or:
//
//	        nil
type NotifierPropertiesDiscordWebhookPtrInput interface {
	pulumi.Input

	ToNotifierPropertiesDiscordWebhookPtrOutput() NotifierPropertiesDiscordWebhookPtrOutput
	ToNotifierPropertiesDiscordWebhookPtrOutputWithContext(context.Context) NotifierPropertiesDiscordWebhookPtrOutput
}

type notifierPropertiesDiscordWebhookPtrType NotifierPropertiesDiscordWebhookArgs

func NotifierPropertiesDiscordWebhookPtr(v *NotifierPropertiesDiscordWebhookArgs) NotifierPropertiesDiscordWebhookPtrInput {
	return (*notifierPropertiesDiscordWebhookPtrType)(v)
}

func (*notifierPropertiesDiscordWebhookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifierPropertiesDiscordWebhook)(nil)).Elem()
}

func (i *notifierPropertiesDiscordWebhookPtrType) ToNotifierPropertiesDiscordWebhookPtrOutput() NotifierPropertiesDiscordWebhookPtrOutput {
	return i.ToNotifierPropertiesDiscordWebhookPtrOutputWithContext(context.Background())
}

func (i *notifierPropertiesDiscordWebhookPtrType) ToNotifierPropertiesDiscordWebhookPtrOutputWithContext(ctx context.Context) NotifierPropertiesDiscordWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesDiscordWebhookPtrOutput)
}

type NotifierPropertiesDiscordWebhookOutput struct{ *pulumi.OutputState }

func (NotifierPropertiesDiscordWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifierPropertiesDiscordWebhook)(nil)).Elem()
}

func (o NotifierPropertiesDiscordWebhookOutput) ToNotifierPropertiesDiscordWebhookOutput() NotifierPropertiesDiscordWebhookOutput {
	return o
}

func (o NotifierPropertiesDiscordWebhookOutput) ToNotifierPropertiesDiscordWebhookOutputWithContext(ctx context.Context) NotifierPropertiesDiscordWebhookOutput {
	return o
}

func (o NotifierPropertiesDiscordWebhookOutput) ToNotifierPropertiesDiscordWebhookPtrOutput() NotifierPropertiesDiscordWebhookPtrOutput {
	return o.ToNotifierPropertiesDiscordWebhookPtrOutputWithContext(context.Background())
}

func (o NotifierPropertiesDiscordWebhookOutput) ToNotifierPropertiesDiscordWebhookPtrOutputWithContext(ctx context.Context) NotifierPropertiesDiscordWebhookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotifierPropertiesDiscordWebhook) *NotifierPropertiesDiscordWebhook {
		return &v
	}).(NotifierPropertiesDiscordWebhookPtrOutput)
}

// The discord webhook URL
func (o NotifierPropertiesDiscordWebhookOutput) DiscordWebhookUrl() pulumi.StringOutput {
	return o.ApplyT(func(v NotifierPropertiesDiscordWebhook) string { return v.DiscordWebhookUrl }).(pulumi.StringOutput)
}

type NotifierPropertiesDiscordWebhookPtrOutput struct{ *pulumi.OutputState }

func (NotifierPropertiesDiscordWebhookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifierPropertiesDiscordWebhook)(nil)).Elem()
}

func (o NotifierPropertiesDiscordWebhookPtrOutput) ToNotifierPropertiesDiscordWebhookPtrOutput() NotifierPropertiesDiscordWebhookPtrOutput {
	return o
}

func (o NotifierPropertiesDiscordWebhookPtrOutput) ToNotifierPropertiesDiscordWebhookPtrOutputWithContext(ctx context.Context) NotifierPropertiesDiscordWebhookPtrOutput {
	return o
}

func (o NotifierPropertiesDiscordWebhookPtrOutput) Elem() NotifierPropertiesDiscordWebhookOutput {
	return o.ApplyT(func(v *NotifierPropertiesDiscordWebhook) NotifierPropertiesDiscordWebhook {
		if v != nil {
			return *v
		}
		var ret NotifierPropertiesDiscordWebhook
		return ret
	}).(NotifierPropertiesDiscordWebhookOutput)
}

// The discord webhook URL
func (o NotifierPropertiesDiscordWebhookPtrOutput) DiscordWebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotifierPropertiesDiscordWebhook) *string {
		if v == nil {
			return nil
		}
		return &v.DiscordWebhookUrl
	}).(pulumi.StringPtrOutput)
}

type NotifierPropertiesEmail struct {
	// The emails to be notified
	Emails []string `pulumi:"emails"`
}

// NotifierPropertiesEmailInput is an input type that accepts NotifierPropertiesEmailArgs and NotifierPropertiesEmailOutput values.
// You can construct a concrete instance of `NotifierPropertiesEmailInput` via:
//
//	NotifierPropertiesEmailArgs{...}
type NotifierPropertiesEmailInput interface {
	pulumi.Input

	ToNotifierPropertiesEmailOutput() NotifierPropertiesEmailOutput
	ToNotifierPropertiesEmailOutputWithContext(context.Context) NotifierPropertiesEmailOutput
}

type NotifierPropertiesEmailArgs struct {
	// The emails to be notified
	Emails pulumi.StringArrayInput `pulumi:"emails"`
}

func (NotifierPropertiesEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifierPropertiesEmail)(nil)).Elem()
}

func (i NotifierPropertiesEmailArgs) ToNotifierPropertiesEmailOutput() NotifierPropertiesEmailOutput {
	return i.ToNotifierPropertiesEmailOutputWithContext(context.Background())
}

func (i NotifierPropertiesEmailArgs) ToNotifierPropertiesEmailOutputWithContext(ctx context.Context) NotifierPropertiesEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesEmailOutput)
}

func (i NotifierPropertiesEmailArgs) ToNotifierPropertiesEmailPtrOutput() NotifierPropertiesEmailPtrOutput {
	return i.ToNotifierPropertiesEmailPtrOutputWithContext(context.Background())
}

func (i NotifierPropertiesEmailArgs) ToNotifierPropertiesEmailPtrOutputWithContext(ctx context.Context) NotifierPropertiesEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesEmailOutput).ToNotifierPropertiesEmailPtrOutputWithContext(ctx)
}

// NotifierPropertiesEmailPtrInput is an input type that accepts NotifierPropertiesEmailArgs, NotifierPropertiesEmailPtr and NotifierPropertiesEmailPtrOutput values.
// You can construct a concrete instance of `NotifierPropertiesEmailPtrInput` via:
//
//	        NotifierPropertiesEmailArgs{...}
//
//	or:
//
//	        nil
type NotifierPropertiesEmailPtrInput interface {
	pulumi.Input

	ToNotifierPropertiesEmailPtrOutput() NotifierPropertiesEmailPtrOutput
	ToNotifierPropertiesEmailPtrOutputWithContext(context.Context) NotifierPropertiesEmailPtrOutput
}

type notifierPropertiesEmailPtrType NotifierPropertiesEmailArgs

func NotifierPropertiesEmailPtr(v *NotifierPropertiesEmailArgs) NotifierPropertiesEmailPtrInput {
	return (*notifierPropertiesEmailPtrType)(v)
}

func (*notifierPropertiesEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifierPropertiesEmail)(nil)).Elem()
}

func (i *notifierPropertiesEmailPtrType) ToNotifierPropertiesEmailPtrOutput() NotifierPropertiesEmailPtrOutput {
	return i.ToNotifierPropertiesEmailPtrOutputWithContext(context.Background())
}

func (i *notifierPropertiesEmailPtrType) ToNotifierPropertiesEmailPtrOutputWithContext(ctx context.Context) NotifierPropertiesEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesEmailPtrOutput)
}

type NotifierPropertiesEmailOutput struct{ *pulumi.OutputState }

func (NotifierPropertiesEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifierPropertiesEmail)(nil)).Elem()
}

func (o NotifierPropertiesEmailOutput) ToNotifierPropertiesEmailOutput() NotifierPropertiesEmailOutput {
	return o
}

func (o NotifierPropertiesEmailOutput) ToNotifierPropertiesEmailOutputWithContext(ctx context.Context) NotifierPropertiesEmailOutput {
	return o
}

func (o NotifierPropertiesEmailOutput) ToNotifierPropertiesEmailPtrOutput() NotifierPropertiesEmailPtrOutput {
	return o.ToNotifierPropertiesEmailPtrOutputWithContext(context.Background())
}

func (o NotifierPropertiesEmailOutput) ToNotifierPropertiesEmailPtrOutputWithContext(ctx context.Context) NotifierPropertiesEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotifierPropertiesEmail) *NotifierPropertiesEmail {
		return &v
	}).(NotifierPropertiesEmailPtrOutput)
}

// The emails to be notified
func (o NotifierPropertiesEmailOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotifierPropertiesEmail) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

type NotifierPropertiesEmailPtrOutput struct{ *pulumi.OutputState }

func (NotifierPropertiesEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifierPropertiesEmail)(nil)).Elem()
}

func (o NotifierPropertiesEmailPtrOutput) ToNotifierPropertiesEmailPtrOutput() NotifierPropertiesEmailPtrOutput {
	return o
}

func (o NotifierPropertiesEmailPtrOutput) ToNotifierPropertiesEmailPtrOutputWithContext(ctx context.Context) NotifierPropertiesEmailPtrOutput {
	return o
}

func (o NotifierPropertiesEmailPtrOutput) Elem() NotifierPropertiesEmailOutput {
	return o.ApplyT(func(v *NotifierPropertiesEmail) NotifierPropertiesEmail {
		if v != nil {
			return *v
		}
		var ret NotifierPropertiesEmail
		return ret
	}).(NotifierPropertiesEmailOutput)
}

// The emails to be notified
func (o NotifierPropertiesEmailPtrOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NotifierPropertiesEmail) []string {
		if v == nil {
			return nil
		}
		return v.Emails
	}).(pulumi.StringArrayOutput)
}

type NotifierPropertiesOpsgenie struct {
	// The opsgenie API key
	ApiKey string `pulumi:"apiKey"`
	// The opsgenie is EU
	IsEu bool `pulumi:"isEu"`
}

// NotifierPropertiesOpsgenieInput is an input type that accepts NotifierPropertiesOpsgenieArgs and NotifierPropertiesOpsgenieOutput values.
// You can construct a concrete instance of `NotifierPropertiesOpsgenieInput` via:
//
//	NotifierPropertiesOpsgenieArgs{...}
type NotifierPropertiesOpsgenieInput interface {
	pulumi.Input

	ToNotifierPropertiesOpsgenieOutput() NotifierPropertiesOpsgenieOutput
	ToNotifierPropertiesOpsgenieOutputWithContext(context.Context) NotifierPropertiesOpsgenieOutput
}

type NotifierPropertiesOpsgenieArgs struct {
	// The opsgenie API key
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// The opsgenie is EU
	IsEu pulumi.BoolInput `pulumi:"isEu"`
}

func (NotifierPropertiesOpsgenieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifierPropertiesOpsgenie)(nil)).Elem()
}

func (i NotifierPropertiesOpsgenieArgs) ToNotifierPropertiesOpsgenieOutput() NotifierPropertiesOpsgenieOutput {
	return i.ToNotifierPropertiesOpsgenieOutputWithContext(context.Background())
}

func (i NotifierPropertiesOpsgenieArgs) ToNotifierPropertiesOpsgenieOutputWithContext(ctx context.Context) NotifierPropertiesOpsgenieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesOpsgenieOutput)
}

func (i NotifierPropertiesOpsgenieArgs) ToNotifierPropertiesOpsgeniePtrOutput() NotifierPropertiesOpsgeniePtrOutput {
	return i.ToNotifierPropertiesOpsgeniePtrOutputWithContext(context.Background())
}

func (i NotifierPropertiesOpsgenieArgs) ToNotifierPropertiesOpsgeniePtrOutputWithContext(ctx context.Context) NotifierPropertiesOpsgeniePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesOpsgenieOutput).ToNotifierPropertiesOpsgeniePtrOutputWithContext(ctx)
}

// NotifierPropertiesOpsgeniePtrInput is an input type that accepts NotifierPropertiesOpsgenieArgs, NotifierPropertiesOpsgeniePtr and NotifierPropertiesOpsgeniePtrOutput values.
// You can construct a concrete instance of `NotifierPropertiesOpsgeniePtrInput` via:
//
//	        NotifierPropertiesOpsgenieArgs{...}
//
//	or:
//
//	        nil
type NotifierPropertiesOpsgeniePtrInput interface {
	pulumi.Input

	ToNotifierPropertiesOpsgeniePtrOutput() NotifierPropertiesOpsgeniePtrOutput
	ToNotifierPropertiesOpsgeniePtrOutputWithContext(context.Context) NotifierPropertiesOpsgeniePtrOutput
}

type notifierPropertiesOpsgeniePtrType NotifierPropertiesOpsgenieArgs

func NotifierPropertiesOpsgeniePtr(v *NotifierPropertiesOpsgenieArgs) NotifierPropertiesOpsgeniePtrInput {
	return (*notifierPropertiesOpsgeniePtrType)(v)
}

func (*notifierPropertiesOpsgeniePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifierPropertiesOpsgenie)(nil)).Elem()
}

func (i *notifierPropertiesOpsgeniePtrType) ToNotifierPropertiesOpsgeniePtrOutput() NotifierPropertiesOpsgeniePtrOutput {
	return i.ToNotifierPropertiesOpsgeniePtrOutputWithContext(context.Background())
}

func (i *notifierPropertiesOpsgeniePtrType) ToNotifierPropertiesOpsgeniePtrOutputWithContext(ctx context.Context) NotifierPropertiesOpsgeniePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesOpsgeniePtrOutput)
}

type NotifierPropertiesOpsgenieOutput struct{ *pulumi.OutputState }

func (NotifierPropertiesOpsgenieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifierPropertiesOpsgenie)(nil)).Elem()
}

func (o NotifierPropertiesOpsgenieOutput) ToNotifierPropertiesOpsgenieOutput() NotifierPropertiesOpsgenieOutput {
	return o
}

func (o NotifierPropertiesOpsgenieOutput) ToNotifierPropertiesOpsgenieOutputWithContext(ctx context.Context) NotifierPropertiesOpsgenieOutput {
	return o
}

func (o NotifierPropertiesOpsgenieOutput) ToNotifierPropertiesOpsgeniePtrOutput() NotifierPropertiesOpsgeniePtrOutput {
	return o.ToNotifierPropertiesOpsgeniePtrOutputWithContext(context.Background())
}

func (o NotifierPropertiesOpsgenieOutput) ToNotifierPropertiesOpsgeniePtrOutputWithContext(ctx context.Context) NotifierPropertiesOpsgeniePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotifierPropertiesOpsgenie) *NotifierPropertiesOpsgenie {
		return &v
	}).(NotifierPropertiesOpsgeniePtrOutput)
}

// The opsgenie API key
func (o NotifierPropertiesOpsgenieOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v NotifierPropertiesOpsgenie) string { return v.ApiKey }).(pulumi.StringOutput)
}

// The opsgenie is EU
func (o NotifierPropertiesOpsgenieOutput) IsEu() pulumi.BoolOutput {
	return o.ApplyT(func(v NotifierPropertiesOpsgenie) bool { return v.IsEu }).(pulumi.BoolOutput)
}

type NotifierPropertiesOpsgeniePtrOutput struct{ *pulumi.OutputState }

func (NotifierPropertiesOpsgeniePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifierPropertiesOpsgenie)(nil)).Elem()
}

func (o NotifierPropertiesOpsgeniePtrOutput) ToNotifierPropertiesOpsgeniePtrOutput() NotifierPropertiesOpsgeniePtrOutput {
	return o
}

func (o NotifierPropertiesOpsgeniePtrOutput) ToNotifierPropertiesOpsgeniePtrOutputWithContext(ctx context.Context) NotifierPropertiesOpsgeniePtrOutput {
	return o
}

func (o NotifierPropertiesOpsgeniePtrOutput) Elem() NotifierPropertiesOpsgenieOutput {
	return o.ApplyT(func(v *NotifierPropertiesOpsgenie) NotifierPropertiesOpsgenie {
		if v != nil {
			return *v
		}
		var ret NotifierPropertiesOpsgenie
		return ret
	}).(NotifierPropertiesOpsgenieOutput)
}

// The opsgenie API key
func (o NotifierPropertiesOpsgeniePtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotifierPropertiesOpsgenie) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// The opsgenie is EU
func (o NotifierPropertiesOpsgeniePtrOutput) IsEu() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NotifierPropertiesOpsgenie) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEu
	}).(pulumi.BoolPtrOutput)
}

type NotifierPropertiesPagerduty struct {
	// The pagerduty routing key
	RoutingKey string `pulumi:"routingKey"`
	// The pager duty token
	Token string `pulumi:"token"`
}

// NotifierPropertiesPagerdutyInput is an input type that accepts NotifierPropertiesPagerdutyArgs and NotifierPropertiesPagerdutyOutput values.
// You can construct a concrete instance of `NotifierPropertiesPagerdutyInput` via:
//
//	NotifierPropertiesPagerdutyArgs{...}
type NotifierPropertiesPagerdutyInput interface {
	pulumi.Input

	ToNotifierPropertiesPagerdutyOutput() NotifierPropertiesPagerdutyOutput
	ToNotifierPropertiesPagerdutyOutputWithContext(context.Context) NotifierPropertiesPagerdutyOutput
}

type NotifierPropertiesPagerdutyArgs struct {
	// The pagerduty routing key
	RoutingKey pulumi.StringInput `pulumi:"routingKey"`
	// The pager duty token
	Token pulumi.StringInput `pulumi:"token"`
}

func (NotifierPropertiesPagerdutyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifierPropertiesPagerduty)(nil)).Elem()
}

func (i NotifierPropertiesPagerdutyArgs) ToNotifierPropertiesPagerdutyOutput() NotifierPropertiesPagerdutyOutput {
	return i.ToNotifierPropertiesPagerdutyOutputWithContext(context.Background())
}

func (i NotifierPropertiesPagerdutyArgs) ToNotifierPropertiesPagerdutyOutputWithContext(ctx context.Context) NotifierPropertiesPagerdutyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesPagerdutyOutput)
}

func (i NotifierPropertiesPagerdutyArgs) ToNotifierPropertiesPagerdutyPtrOutput() NotifierPropertiesPagerdutyPtrOutput {
	return i.ToNotifierPropertiesPagerdutyPtrOutputWithContext(context.Background())
}

func (i NotifierPropertiesPagerdutyArgs) ToNotifierPropertiesPagerdutyPtrOutputWithContext(ctx context.Context) NotifierPropertiesPagerdutyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesPagerdutyOutput).ToNotifierPropertiesPagerdutyPtrOutputWithContext(ctx)
}

// NotifierPropertiesPagerdutyPtrInput is an input type that accepts NotifierPropertiesPagerdutyArgs, NotifierPropertiesPagerdutyPtr and NotifierPropertiesPagerdutyPtrOutput values.
// You can construct a concrete instance of `NotifierPropertiesPagerdutyPtrInput` via:
//
//	        NotifierPropertiesPagerdutyArgs{...}
//
//	or:
//
//	        nil
type NotifierPropertiesPagerdutyPtrInput interface {
	pulumi.Input

	ToNotifierPropertiesPagerdutyPtrOutput() NotifierPropertiesPagerdutyPtrOutput
	ToNotifierPropertiesPagerdutyPtrOutputWithContext(context.Context) NotifierPropertiesPagerdutyPtrOutput
}

type notifierPropertiesPagerdutyPtrType NotifierPropertiesPagerdutyArgs

func NotifierPropertiesPagerdutyPtr(v *NotifierPropertiesPagerdutyArgs) NotifierPropertiesPagerdutyPtrInput {
	return (*notifierPropertiesPagerdutyPtrType)(v)
}

func (*notifierPropertiesPagerdutyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifierPropertiesPagerduty)(nil)).Elem()
}

func (i *notifierPropertiesPagerdutyPtrType) ToNotifierPropertiesPagerdutyPtrOutput() NotifierPropertiesPagerdutyPtrOutput {
	return i.ToNotifierPropertiesPagerdutyPtrOutputWithContext(context.Background())
}

func (i *notifierPropertiesPagerdutyPtrType) ToNotifierPropertiesPagerdutyPtrOutputWithContext(ctx context.Context) NotifierPropertiesPagerdutyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesPagerdutyPtrOutput)
}

type NotifierPropertiesPagerdutyOutput struct{ *pulumi.OutputState }

func (NotifierPropertiesPagerdutyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifierPropertiesPagerduty)(nil)).Elem()
}

func (o NotifierPropertiesPagerdutyOutput) ToNotifierPropertiesPagerdutyOutput() NotifierPropertiesPagerdutyOutput {
	return o
}

func (o NotifierPropertiesPagerdutyOutput) ToNotifierPropertiesPagerdutyOutputWithContext(ctx context.Context) NotifierPropertiesPagerdutyOutput {
	return o
}

func (o NotifierPropertiesPagerdutyOutput) ToNotifierPropertiesPagerdutyPtrOutput() NotifierPropertiesPagerdutyPtrOutput {
	return o.ToNotifierPropertiesPagerdutyPtrOutputWithContext(context.Background())
}

func (o NotifierPropertiesPagerdutyOutput) ToNotifierPropertiesPagerdutyPtrOutputWithContext(ctx context.Context) NotifierPropertiesPagerdutyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotifierPropertiesPagerduty) *NotifierPropertiesPagerduty {
		return &v
	}).(NotifierPropertiesPagerdutyPtrOutput)
}

// The pagerduty routing key
func (o NotifierPropertiesPagerdutyOutput) RoutingKey() pulumi.StringOutput {
	return o.ApplyT(func(v NotifierPropertiesPagerduty) string { return v.RoutingKey }).(pulumi.StringOutput)
}

// The pager duty token
func (o NotifierPropertiesPagerdutyOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v NotifierPropertiesPagerduty) string { return v.Token }).(pulumi.StringOutput)
}

type NotifierPropertiesPagerdutyPtrOutput struct{ *pulumi.OutputState }

func (NotifierPropertiesPagerdutyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifierPropertiesPagerduty)(nil)).Elem()
}

func (o NotifierPropertiesPagerdutyPtrOutput) ToNotifierPropertiesPagerdutyPtrOutput() NotifierPropertiesPagerdutyPtrOutput {
	return o
}

func (o NotifierPropertiesPagerdutyPtrOutput) ToNotifierPropertiesPagerdutyPtrOutputWithContext(ctx context.Context) NotifierPropertiesPagerdutyPtrOutput {
	return o
}

func (o NotifierPropertiesPagerdutyPtrOutput) Elem() NotifierPropertiesPagerdutyOutput {
	return o.ApplyT(func(v *NotifierPropertiesPagerduty) NotifierPropertiesPagerduty {
		if v != nil {
			return *v
		}
		var ret NotifierPropertiesPagerduty
		return ret
	}).(NotifierPropertiesPagerdutyOutput)
}

// The pagerduty routing key
func (o NotifierPropertiesPagerdutyPtrOutput) RoutingKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotifierPropertiesPagerduty) *string {
		if v == nil {
			return nil
		}
		return &v.RoutingKey
	}).(pulumi.StringPtrOutput)
}

// The pager duty token
func (o NotifierPropertiesPagerdutyPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotifierPropertiesPagerduty) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

type NotifierPropertiesSlack struct {
	// The slack URL
	SlackUrl string `pulumi:"slackUrl"`
}

// NotifierPropertiesSlackInput is an input type that accepts NotifierPropertiesSlackArgs and NotifierPropertiesSlackOutput values.
// You can construct a concrete instance of `NotifierPropertiesSlackInput` via:
//
//	NotifierPropertiesSlackArgs{...}
type NotifierPropertiesSlackInput interface {
	pulumi.Input

	ToNotifierPropertiesSlackOutput() NotifierPropertiesSlackOutput
	ToNotifierPropertiesSlackOutputWithContext(context.Context) NotifierPropertiesSlackOutput
}

type NotifierPropertiesSlackArgs struct {
	// The slack URL
	SlackUrl pulumi.StringInput `pulumi:"slackUrl"`
}

func (NotifierPropertiesSlackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifierPropertiesSlack)(nil)).Elem()
}

func (i NotifierPropertiesSlackArgs) ToNotifierPropertiesSlackOutput() NotifierPropertiesSlackOutput {
	return i.ToNotifierPropertiesSlackOutputWithContext(context.Background())
}

func (i NotifierPropertiesSlackArgs) ToNotifierPropertiesSlackOutputWithContext(ctx context.Context) NotifierPropertiesSlackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesSlackOutput)
}

func (i NotifierPropertiesSlackArgs) ToNotifierPropertiesSlackPtrOutput() NotifierPropertiesSlackPtrOutput {
	return i.ToNotifierPropertiesSlackPtrOutputWithContext(context.Background())
}

func (i NotifierPropertiesSlackArgs) ToNotifierPropertiesSlackPtrOutputWithContext(ctx context.Context) NotifierPropertiesSlackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesSlackOutput).ToNotifierPropertiesSlackPtrOutputWithContext(ctx)
}

// NotifierPropertiesSlackPtrInput is an input type that accepts NotifierPropertiesSlackArgs, NotifierPropertiesSlackPtr and NotifierPropertiesSlackPtrOutput values.
// You can construct a concrete instance of `NotifierPropertiesSlackPtrInput` via:
//
//	        NotifierPropertiesSlackArgs{...}
//
//	or:
//
//	        nil
type NotifierPropertiesSlackPtrInput interface {
	pulumi.Input

	ToNotifierPropertiesSlackPtrOutput() NotifierPropertiesSlackPtrOutput
	ToNotifierPropertiesSlackPtrOutputWithContext(context.Context) NotifierPropertiesSlackPtrOutput
}

type notifierPropertiesSlackPtrType NotifierPropertiesSlackArgs

func NotifierPropertiesSlackPtr(v *NotifierPropertiesSlackArgs) NotifierPropertiesSlackPtrInput {
	return (*notifierPropertiesSlackPtrType)(v)
}

func (*notifierPropertiesSlackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifierPropertiesSlack)(nil)).Elem()
}

func (i *notifierPropertiesSlackPtrType) ToNotifierPropertiesSlackPtrOutput() NotifierPropertiesSlackPtrOutput {
	return i.ToNotifierPropertiesSlackPtrOutputWithContext(context.Background())
}

func (i *notifierPropertiesSlackPtrType) ToNotifierPropertiesSlackPtrOutputWithContext(ctx context.Context) NotifierPropertiesSlackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesSlackPtrOutput)
}

type NotifierPropertiesSlackOutput struct{ *pulumi.OutputState }

func (NotifierPropertiesSlackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifierPropertiesSlack)(nil)).Elem()
}

func (o NotifierPropertiesSlackOutput) ToNotifierPropertiesSlackOutput() NotifierPropertiesSlackOutput {
	return o
}

func (o NotifierPropertiesSlackOutput) ToNotifierPropertiesSlackOutputWithContext(ctx context.Context) NotifierPropertiesSlackOutput {
	return o
}

func (o NotifierPropertiesSlackOutput) ToNotifierPropertiesSlackPtrOutput() NotifierPropertiesSlackPtrOutput {
	return o.ToNotifierPropertiesSlackPtrOutputWithContext(context.Background())
}

func (o NotifierPropertiesSlackOutput) ToNotifierPropertiesSlackPtrOutputWithContext(ctx context.Context) NotifierPropertiesSlackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotifierPropertiesSlack) *NotifierPropertiesSlack {
		return &v
	}).(NotifierPropertiesSlackPtrOutput)
}

// The slack URL
func (o NotifierPropertiesSlackOutput) SlackUrl() pulumi.StringOutput {
	return o.ApplyT(func(v NotifierPropertiesSlack) string { return v.SlackUrl }).(pulumi.StringOutput)
}

type NotifierPropertiesSlackPtrOutput struct{ *pulumi.OutputState }

func (NotifierPropertiesSlackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifierPropertiesSlack)(nil)).Elem()
}

func (o NotifierPropertiesSlackPtrOutput) ToNotifierPropertiesSlackPtrOutput() NotifierPropertiesSlackPtrOutput {
	return o
}

func (o NotifierPropertiesSlackPtrOutput) ToNotifierPropertiesSlackPtrOutputWithContext(ctx context.Context) NotifierPropertiesSlackPtrOutput {
	return o
}

func (o NotifierPropertiesSlackPtrOutput) Elem() NotifierPropertiesSlackOutput {
	return o.ApplyT(func(v *NotifierPropertiesSlack) NotifierPropertiesSlack {
		if v != nil {
			return *v
		}
		var ret NotifierPropertiesSlack
		return ret
	}).(NotifierPropertiesSlackOutput)
}

// The slack URL
func (o NotifierPropertiesSlackPtrOutput) SlackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotifierPropertiesSlack) *string {
		if v == nil {
			return nil
		}
		return &v.SlackUrl
	}).(pulumi.StringPtrOutput)
}

type NotifierPropertiesWebhook struct {
	// The webhook URL
	Url string `pulumi:"url"`
}

// NotifierPropertiesWebhookInput is an input type that accepts NotifierPropertiesWebhookArgs and NotifierPropertiesWebhookOutput values.
// You can construct a concrete instance of `NotifierPropertiesWebhookInput` via:
//
//	NotifierPropertiesWebhookArgs{...}
type NotifierPropertiesWebhookInput interface {
	pulumi.Input

	ToNotifierPropertiesWebhookOutput() NotifierPropertiesWebhookOutput
	ToNotifierPropertiesWebhookOutputWithContext(context.Context) NotifierPropertiesWebhookOutput
}

type NotifierPropertiesWebhookArgs struct {
	// The webhook URL
	Url pulumi.StringInput `pulumi:"url"`
}

func (NotifierPropertiesWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifierPropertiesWebhook)(nil)).Elem()
}

func (i NotifierPropertiesWebhookArgs) ToNotifierPropertiesWebhookOutput() NotifierPropertiesWebhookOutput {
	return i.ToNotifierPropertiesWebhookOutputWithContext(context.Background())
}

func (i NotifierPropertiesWebhookArgs) ToNotifierPropertiesWebhookOutputWithContext(ctx context.Context) NotifierPropertiesWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesWebhookOutput)
}

func (i NotifierPropertiesWebhookArgs) ToNotifierPropertiesWebhookPtrOutput() NotifierPropertiesWebhookPtrOutput {
	return i.ToNotifierPropertiesWebhookPtrOutputWithContext(context.Background())
}

func (i NotifierPropertiesWebhookArgs) ToNotifierPropertiesWebhookPtrOutputWithContext(ctx context.Context) NotifierPropertiesWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesWebhookOutput).ToNotifierPropertiesWebhookPtrOutputWithContext(ctx)
}

// NotifierPropertiesWebhookPtrInput is an input type that accepts NotifierPropertiesWebhookArgs, NotifierPropertiesWebhookPtr and NotifierPropertiesWebhookPtrOutput values.
// You can construct a concrete instance of `NotifierPropertiesWebhookPtrInput` via:
//
//	        NotifierPropertiesWebhookArgs{...}
//
//	or:
//
//	        nil
type NotifierPropertiesWebhookPtrInput interface {
	pulumi.Input

	ToNotifierPropertiesWebhookPtrOutput() NotifierPropertiesWebhookPtrOutput
	ToNotifierPropertiesWebhookPtrOutputWithContext(context.Context) NotifierPropertiesWebhookPtrOutput
}

type notifierPropertiesWebhookPtrType NotifierPropertiesWebhookArgs

func NotifierPropertiesWebhookPtr(v *NotifierPropertiesWebhookArgs) NotifierPropertiesWebhookPtrInput {
	return (*notifierPropertiesWebhookPtrType)(v)
}

func (*notifierPropertiesWebhookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifierPropertiesWebhook)(nil)).Elem()
}

func (i *notifierPropertiesWebhookPtrType) ToNotifierPropertiesWebhookPtrOutput() NotifierPropertiesWebhookPtrOutput {
	return i.ToNotifierPropertiesWebhookPtrOutputWithContext(context.Background())
}

func (i *notifierPropertiesWebhookPtrType) ToNotifierPropertiesWebhookPtrOutputWithContext(ctx context.Context) NotifierPropertiesWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifierPropertiesWebhookPtrOutput)
}

type NotifierPropertiesWebhookOutput struct{ *pulumi.OutputState }

func (NotifierPropertiesWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifierPropertiesWebhook)(nil)).Elem()
}

func (o NotifierPropertiesWebhookOutput) ToNotifierPropertiesWebhookOutput() NotifierPropertiesWebhookOutput {
	return o
}

func (o NotifierPropertiesWebhookOutput) ToNotifierPropertiesWebhookOutputWithContext(ctx context.Context) NotifierPropertiesWebhookOutput {
	return o
}

func (o NotifierPropertiesWebhookOutput) ToNotifierPropertiesWebhookPtrOutput() NotifierPropertiesWebhookPtrOutput {
	return o.ToNotifierPropertiesWebhookPtrOutputWithContext(context.Background())
}

func (o NotifierPropertiesWebhookOutput) ToNotifierPropertiesWebhookPtrOutputWithContext(ctx context.Context) NotifierPropertiesWebhookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotifierPropertiesWebhook) *NotifierPropertiesWebhook {
		return &v
	}).(NotifierPropertiesWebhookPtrOutput)
}

// The webhook URL
func (o NotifierPropertiesWebhookOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v NotifierPropertiesWebhook) string { return v.Url }).(pulumi.StringOutput)
}

type NotifierPropertiesWebhookPtrOutput struct{ *pulumi.OutputState }

func (NotifierPropertiesWebhookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifierPropertiesWebhook)(nil)).Elem()
}

func (o NotifierPropertiesWebhookPtrOutput) ToNotifierPropertiesWebhookPtrOutput() NotifierPropertiesWebhookPtrOutput {
	return o
}

func (o NotifierPropertiesWebhookPtrOutput) ToNotifierPropertiesWebhookPtrOutputWithContext(ctx context.Context) NotifierPropertiesWebhookPtrOutput {
	return o
}

func (o NotifierPropertiesWebhookPtrOutput) Elem() NotifierPropertiesWebhookOutput {
	return o.ApplyT(func(v *NotifierPropertiesWebhook) NotifierPropertiesWebhook {
		if v != nil {
			return *v
		}
		var ret NotifierPropertiesWebhook
		return ret
	}).(NotifierPropertiesWebhookOutput)
}

// The webhook URL
func (o NotifierPropertiesWebhookPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotifierPropertiesWebhook) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type GetNotifierProperties struct {
	Discord        GetNotifierPropertiesDiscord        `pulumi:"discord"`
	DiscordWebhook GetNotifierPropertiesDiscordWebhook `pulumi:"discordWebhook"`
	Email          GetNotifierPropertiesEmail          `pulumi:"email"`
	Opsgenie       GetNotifierPropertiesOpsgenie       `pulumi:"opsgenie"`
	Pagerduty      GetNotifierPropertiesPagerduty      `pulumi:"pagerduty"`
	Slack          GetNotifierPropertiesSlack          `pulumi:"slack"`
	Webhook        GetNotifierPropertiesWebhook        `pulumi:"webhook"`
}

// GetNotifierPropertiesInput is an input type that accepts GetNotifierPropertiesArgs and GetNotifierPropertiesOutput values.
// You can construct a concrete instance of `GetNotifierPropertiesInput` via:
//
//	GetNotifierPropertiesArgs{...}
type GetNotifierPropertiesInput interface {
	pulumi.Input

	ToGetNotifierPropertiesOutput() GetNotifierPropertiesOutput
	ToGetNotifierPropertiesOutputWithContext(context.Context) GetNotifierPropertiesOutput
}

type GetNotifierPropertiesArgs struct {
	Discord        GetNotifierPropertiesDiscordInput        `pulumi:"discord"`
	DiscordWebhook GetNotifierPropertiesDiscordWebhookInput `pulumi:"discordWebhook"`
	Email          GetNotifierPropertiesEmailInput          `pulumi:"email"`
	Opsgenie       GetNotifierPropertiesOpsgenieInput       `pulumi:"opsgenie"`
	Pagerduty      GetNotifierPropertiesPagerdutyInput      `pulumi:"pagerduty"`
	Slack          GetNotifierPropertiesSlackInput          `pulumi:"slack"`
	Webhook        GetNotifierPropertiesWebhookInput        `pulumi:"webhook"`
}

func (GetNotifierPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifierProperties)(nil)).Elem()
}

func (i GetNotifierPropertiesArgs) ToGetNotifierPropertiesOutput() GetNotifierPropertiesOutput {
	return i.ToGetNotifierPropertiesOutputWithContext(context.Background())
}

func (i GetNotifierPropertiesArgs) ToGetNotifierPropertiesOutputWithContext(ctx context.Context) GetNotifierPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifierPropertiesOutput)
}

type GetNotifierPropertiesOutput struct{ *pulumi.OutputState }

func (GetNotifierPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifierProperties)(nil)).Elem()
}

func (o GetNotifierPropertiesOutput) ToGetNotifierPropertiesOutput() GetNotifierPropertiesOutput {
	return o
}

func (o GetNotifierPropertiesOutput) ToGetNotifierPropertiesOutputWithContext(ctx context.Context) GetNotifierPropertiesOutput {
	return o
}

func (o GetNotifierPropertiesOutput) Discord() GetNotifierPropertiesDiscordOutput {
	return o.ApplyT(func(v GetNotifierProperties) GetNotifierPropertiesDiscord { return v.Discord }).(GetNotifierPropertiesDiscordOutput)
}

func (o GetNotifierPropertiesOutput) DiscordWebhook() GetNotifierPropertiesDiscordWebhookOutput {
	return o.ApplyT(func(v GetNotifierProperties) GetNotifierPropertiesDiscordWebhook { return v.DiscordWebhook }).(GetNotifierPropertiesDiscordWebhookOutput)
}

func (o GetNotifierPropertiesOutput) Email() GetNotifierPropertiesEmailOutput {
	return o.ApplyT(func(v GetNotifierProperties) GetNotifierPropertiesEmail { return v.Email }).(GetNotifierPropertiesEmailOutput)
}

func (o GetNotifierPropertiesOutput) Opsgenie() GetNotifierPropertiesOpsgenieOutput {
	return o.ApplyT(func(v GetNotifierProperties) GetNotifierPropertiesOpsgenie { return v.Opsgenie }).(GetNotifierPropertiesOpsgenieOutput)
}

func (o GetNotifierPropertiesOutput) Pagerduty() GetNotifierPropertiesPagerdutyOutput {
	return o.ApplyT(func(v GetNotifierProperties) GetNotifierPropertiesPagerduty { return v.Pagerduty }).(GetNotifierPropertiesPagerdutyOutput)
}

func (o GetNotifierPropertiesOutput) Slack() GetNotifierPropertiesSlackOutput {
	return o.ApplyT(func(v GetNotifierProperties) GetNotifierPropertiesSlack { return v.Slack }).(GetNotifierPropertiesSlackOutput)
}

func (o GetNotifierPropertiesOutput) Webhook() GetNotifierPropertiesWebhookOutput {
	return o.ApplyT(func(v GetNotifierProperties) GetNotifierPropertiesWebhook { return v.Webhook }).(GetNotifierPropertiesWebhookOutput)
}

type GetNotifierPropertiesDiscord struct {
	// The discord channel
	DiscordChannel string `pulumi:"discordChannel"`
	// The discord token
	DiscordToken string `pulumi:"discordToken"`
}

// GetNotifierPropertiesDiscordInput is an input type that accepts GetNotifierPropertiesDiscordArgs and GetNotifierPropertiesDiscordOutput values.
// You can construct a concrete instance of `GetNotifierPropertiesDiscordInput` via:
//
//	GetNotifierPropertiesDiscordArgs{...}
type GetNotifierPropertiesDiscordInput interface {
	pulumi.Input

	ToGetNotifierPropertiesDiscordOutput() GetNotifierPropertiesDiscordOutput
	ToGetNotifierPropertiesDiscordOutputWithContext(context.Context) GetNotifierPropertiesDiscordOutput
}

type GetNotifierPropertiesDiscordArgs struct {
	// The discord channel
	DiscordChannel pulumi.StringInput `pulumi:"discordChannel"`
	// The discord token
	DiscordToken pulumi.StringInput `pulumi:"discordToken"`
}

func (GetNotifierPropertiesDiscordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifierPropertiesDiscord)(nil)).Elem()
}

func (i GetNotifierPropertiesDiscordArgs) ToGetNotifierPropertiesDiscordOutput() GetNotifierPropertiesDiscordOutput {
	return i.ToGetNotifierPropertiesDiscordOutputWithContext(context.Background())
}

func (i GetNotifierPropertiesDiscordArgs) ToGetNotifierPropertiesDiscordOutputWithContext(ctx context.Context) GetNotifierPropertiesDiscordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifierPropertiesDiscordOutput)
}

type GetNotifierPropertiesDiscordOutput struct{ *pulumi.OutputState }

func (GetNotifierPropertiesDiscordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifierPropertiesDiscord)(nil)).Elem()
}

func (o GetNotifierPropertiesDiscordOutput) ToGetNotifierPropertiesDiscordOutput() GetNotifierPropertiesDiscordOutput {
	return o
}

func (o GetNotifierPropertiesDiscordOutput) ToGetNotifierPropertiesDiscordOutputWithContext(ctx context.Context) GetNotifierPropertiesDiscordOutput {
	return o
}

// The discord channel
func (o GetNotifierPropertiesDiscordOutput) DiscordChannel() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifierPropertiesDiscord) string { return v.DiscordChannel }).(pulumi.StringOutput)
}

// The discord token
func (o GetNotifierPropertiesDiscordOutput) DiscordToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifierPropertiesDiscord) string { return v.DiscordToken }).(pulumi.StringOutput)
}

type GetNotifierPropertiesDiscordWebhook struct {
	// The discord webhook URL
	DiscordWebhookUrl string `pulumi:"discordWebhookUrl"`
}

// GetNotifierPropertiesDiscordWebhookInput is an input type that accepts GetNotifierPropertiesDiscordWebhookArgs and GetNotifierPropertiesDiscordWebhookOutput values.
// You can construct a concrete instance of `GetNotifierPropertiesDiscordWebhookInput` via:
//
//	GetNotifierPropertiesDiscordWebhookArgs{...}
type GetNotifierPropertiesDiscordWebhookInput interface {
	pulumi.Input

	ToGetNotifierPropertiesDiscordWebhookOutput() GetNotifierPropertiesDiscordWebhookOutput
	ToGetNotifierPropertiesDiscordWebhookOutputWithContext(context.Context) GetNotifierPropertiesDiscordWebhookOutput
}

type GetNotifierPropertiesDiscordWebhookArgs struct {
	// The discord webhook URL
	DiscordWebhookUrl pulumi.StringInput `pulumi:"discordWebhookUrl"`
}

func (GetNotifierPropertiesDiscordWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifierPropertiesDiscordWebhook)(nil)).Elem()
}

func (i GetNotifierPropertiesDiscordWebhookArgs) ToGetNotifierPropertiesDiscordWebhookOutput() GetNotifierPropertiesDiscordWebhookOutput {
	return i.ToGetNotifierPropertiesDiscordWebhookOutputWithContext(context.Background())
}

func (i GetNotifierPropertiesDiscordWebhookArgs) ToGetNotifierPropertiesDiscordWebhookOutputWithContext(ctx context.Context) GetNotifierPropertiesDiscordWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifierPropertiesDiscordWebhookOutput)
}

type GetNotifierPropertiesDiscordWebhookOutput struct{ *pulumi.OutputState }

func (GetNotifierPropertiesDiscordWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifierPropertiesDiscordWebhook)(nil)).Elem()
}

func (o GetNotifierPropertiesDiscordWebhookOutput) ToGetNotifierPropertiesDiscordWebhookOutput() GetNotifierPropertiesDiscordWebhookOutput {
	return o
}

func (o GetNotifierPropertiesDiscordWebhookOutput) ToGetNotifierPropertiesDiscordWebhookOutputWithContext(ctx context.Context) GetNotifierPropertiesDiscordWebhookOutput {
	return o
}

// The discord webhook URL
func (o GetNotifierPropertiesDiscordWebhookOutput) DiscordWebhookUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifierPropertiesDiscordWebhook) string { return v.DiscordWebhookUrl }).(pulumi.StringOutput)
}

type GetNotifierPropertiesEmail struct {
	// The emails to be notified
	Emails []string `pulumi:"emails"`
}

// GetNotifierPropertiesEmailInput is an input type that accepts GetNotifierPropertiesEmailArgs and GetNotifierPropertiesEmailOutput values.
// You can construct a concrete instance of `GetNotifierPropertiesEmailInput` via:
//
//	GetNotifierPropertiesEmailArgs{...}
type GetNotifierPropertiesEmailInput interface {
	pulumi.Input

	ToGetNotifierPropertiesEmailOutput() GetNotifierPropertiesEmailOutput
	ToGetNotifierPropertiesEmailOutputWithContext(context.Context) GetNotifierPropertiesEmailOutput
}

type GetNotifierPropertiesEmailArgs struct {
	// The emails to be notified
	Emails pulumi.StringArrayInput `pulumi:"emails"`
}

func (GetNotifierPropertiesEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifierPropertiesEmail)(nil)).Elem()
}

func (i GetNotifierPropertiesEmailArgs) ToGetNotifierPropertiesEmailOutput() GetNotifierPropertiesEmailOutput {
	return i.ToGetNotifierPropertiesEmailOutputWithContext(context.Background())
}

func (i GetNotifierPropertiesEmailArgs) ToGetNotifierPropertiesEmailOutputWithContext(ctx context.Context) GetNotifierPropertiesEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifierPropertiesEmailOutput)
}

type GetNotifierPropertiesEmailOutput struct{ *pulumi.OutputState }

func (GetNotifierPropertiesEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifierPropertiesEmail)(nil)).Elem()
}

func (o GetNotifierPropertiesEmailOutput) ToGetNotifierPropertiesEmailOutput() GetNotifierPropertiesEmailOutput {
	return o
}

func (o GetNotifierPropertiesEmailOutput) ToGetNotifierPropertiesEmailOutputWithContext(ctx context.Context) GetNotifierPropertiesEmailOutput {
	return o
}

// The emails to be notified
func (o GetNotifierPropertiesEmailOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNotifierPropertiesEmail) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

type GetNotifierPropertiesOpsgenie struct {
	// The opsgenie API key
	ApiKey string `pulumi:"apiKey"`
	// The opsgenie is EU
	IsEu bool `pulumi:"isEu"`
}

// GetNotifierPropertiesOpsgenieInput is an input type that accepts GetNotifierPropertiesOpsgenieArgs and GetNotifierPropertiesOpsgenieOutput values.
// You can construct a concrete instance of `GetNotifierPropertiesOpsgenieInput` via:
//
//	GetNotifierPropertiesOpsgenieArgs{...}
type GetNotifierPropertiesOpsgenieInput interface {
	pulumi.Input

	ToGetNotifierPropertiesOpsgenieOutput() GetNotifierPropertiesOpsgenieOutput
	ToGetNotifierPropertiesOpsgenieOutputWithContext(context.Context) GetNotifierPropertiesOpsgenieOutput
}

type GetNotifierPropertiesOpsgenieArgs struct {
	// The opsgenie API key
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// The opsgenie is EU
	IsEu pulumi.BoolInput `pulumi:"isEu"`
}

func (GetNotifierPropertiesOpsgenieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifierPropertiesOpsgenie)(nil)).Elem()
}

func (i GetNotifierPropertiesOpsgenieArgs) ToGetNotifierPropertiesOpsgenieOutput() GetNotifierPropertiesOpsgenieOutput {
	return i.ToGetNotifierPropertiesOpsgenieOutputWithContext(context.Background())
}

func (i GetNotifierPropertiesOpsgenieArgs) ToGetNotifierPropertiesOpsgenieOutputWithContext(ctx context.Context) GetNotifierPropertiesOpsgenieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifierPropertiesOpsgenieOutput)
}

type GetNotifierPropertiesOpsgenieOutput struct{ *pulumi.OutputState }

func (GetNotifierPropertiesOpsgenieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifierPropertiesOpsgenie)(nil)).Elem()
}

func (o GetNotifierPropertiesOpsgenieOutput) ToGetNotifierPropertiesOpsgenieOutput() GetNotifierPropertiesOpsgenieOutput {
	return o
}

func (o GetNotifierPropertiesOpsgenieOutput) ToGetNotifierPropertiesOpsgenieOutputWithContext(ctx context.Context) GetNotifierPropertiesOpsgenieOutput {
	return o
}

// The opsgenie API key
func (o GetNotifierPropertiesOpsgenieOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifierPropertiesOpsgenie) string { return v.ApiKey }).(pulumi.StringOutput)
}

// The opsgenie is EU
func (o GetNotifierPropertiesOpsgenieOutput) IsEu() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNotifierPropertiesOpsgenie) bool { return v.IsEu }).(pulumi.BoolOutput)
}

type GetNotifierPropertiesPagerduty struct {
	// The pagerduty routing key
	RoutingKey string `pulumi:"routingKey"`
	// The pager duty token
	Token string `pulumi:"token"`
}

// GetNotifierPropertiesPagerdutyInput is an input type that accepts GetNotifierPropertiesPagerdutyArgs and GetNotifierPropertiesPagerdutyOutput values.
// You can construct a concrete instance of `GetNotifierPropertiesPagerdutyInput` via:
//
//	GetNotifierPropertiesPagerdutyArgs{...}
type GetNotifierPropertiesPagerdutyInput interface {
	pulumi.Input

	ToGetNotifierPropertiesPagerdutyOutput() GetNotifierPropertiesPagerdutyOutput
	ToGetNotifierPropertiesPagerdutyOutputWithContext(context.Context) GetNotifierPropertiesPagerdutyOutput
}

type GetNotifierPropertiesPagerdutyArgs struct {
	// The pagerduty routing key
	RoutingKey pulumi.StringInput `pulumi:"routingKey"`
	// The pager duty token
	Token pulumi.StringInput `pulumi:"token"`
}

func (GetNotifierPropertiesPagerdutyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifierPropertiesPagerduty)(nil)).Elem()
}

func (i GetNotifierPropertiesPagerdutyArgs) ToGetNotifierPropertiesPagerdutyOutput() GetNotifierPropertiesPagerdutyOutput {
	return i.ToGetNotifierPropertiesPagerdutyOutputWithContext(context.Background())
}

func (i GetNotifierPropertiesPagerdutyArgs) ToGetNotifierPropertiesPagerdutyOutputWithContext(ctx context.Context) GetNotifierPropertiesPagerdutyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifierPropertiesPagerdutyOutput)
}

type GetNotifierPropertiesPagerdutyOutput struct{ *pulumi.OutputState }

func (GetNotifierPropertiesPagerdutyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifierPropertiesPagerduty)(nil)).Elem()
}

func (o GetNotifierPropertiesPagerdutyOutput) ToGetNotifierPropertiesPagerdutyOutput() GetNotifierPropertiesPagerdutyOutput {
	return o
}

func (o GetNotifierPropertiesPagerdutyOutput) ToGetNotifierPropertiesPagerdutyOutputWithContext(ctx context.Context) GetNotifierPropertiesPagerdutyOutput {
	return o
}

// The pagerduty routing key
func (o GetNotifierPropertiesPagerdutyOutput) RoutingKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifierPropertiesPagerduty) string { return v.RoutingKey }).(pulumi.StringOutput)
}

// The pager duty token
func (o GetNotifierPropertiesPagerdutyOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifierPropertiesPagerduty) string { return v.Token }).(pulumi.StringOutput)
}

type GetNotifierPropertiesSlack struct {
	// The slack URL
	SlackUrl string `pulumi:"slackUrl"`
}

// GetNotifierPropertiesSlackInput is an input type that accepts GetNotifierPropertiesSlackArgs and GetNotifierPropertiesSlackOutput values.
// You can construct a concrete instance of `GetNotifierPropertiesSlackInput` via:
//
//	GetNotifierPropertiesSlackArgs{...}
type GetNotifierPropertiesSlackInput interface {
	pulumi.Input

	ToGetNotifierPropertiesSlackOutput() GetNotifierPropertiesSlackOutput
	ToGetNotifierPropertiesSlackOutputWithContext(context.Context) GetNotifierPropertiesSlackOutput
}

type GetNotifierPropertiesSlackArgs struct {
	// The slack URL
	SlackUrl pulumi.StringInput `pulumi:"slackUrl"`
}

func (GetNotifierPropertiesSlackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifierPropertiesSlack)(nil)).Elem()
}

func (i GetNotifierPropertiesSlackArgs) ToGetNotifierPropertiesSlackOutput() GetNotifierPropertiesSlackOutput {
	return i.ToGetNotifierPropertiesSlackOutputWithContext(context.Background())
}

func (i GetNotifierPropertiesSlackArgs) ToGetNotifierPropertiesSlackOutputWithContext(ctx context.Context) GetNotifierPropertiesSlackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifierPropertiesSlackOutput)
}

type GetNotifierPropertiesSlackOutput struct{ *pulumi.OutputState }

func (GetNotifierPropertiesSlackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifierPropertiesSlack)(nil)).Elem()
}

func (o GetNotifierPropertiesSlackOutput) ToGetNotifierPropertiesSlackOutput() GetNotifierPropertiesSlackOutput {
	return o
}

func (o GetNotifierPropertiesSlackOutput) ToGetNotifierPropertiesSlackOutputWithContext(ctx context.Context) GetNotifierPropertiesSlackOutput {
	return o
}

// The slack URL
func (o GetNotifierPropertiesSlackOutput) SlackUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifierPropertiesSlack) string { return v.SlackUrl }).(pulumi.StringOutput)
}

type GetNotifierPropertiesWebhook struct {
	// The webhook URL
	Url string `pulumi:"url"`
}

// GetNotifierPropertiesWebhookInput is an input type that accepts GetNotifierPropertiesWebhookArgs and GetNotifierPropertiesWebhookOutput values.
// You can construct a concrete instance of `GetNotifierPropertiesWebhookInput` via:
//
//	GetNotifierPropertiesWebhookArgs{...}
type GetNotifierPropertiesWebhookInput interface {
	pulumi.Input

	ToGetNotifierPropertiesWebhookOutput() GetNotifierPropertiesWebhookOutput
	ToGetNotifierPropertiesWebhookOutputWithContext(context.Context) GetNotifierPropertiesWebhookOutput
}

type GetNotifierPropertiesWebhookArgs struct {
	// The webhook URL
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetNotifierPropertiesWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifierPropertiesWebhook)(nil)).Elem()
}

func (i GetNotifierPropertiesWebhookArgs) ToGetNotifierPropertiesWebhookOutput() GetNotifierPropertiesWebhookOutput {
	return i.ToGetNotifierPropertiesWebhookOutputWithContext(context.Background())
}

func (i GetNotifierPropertiesWebhookArgs) ToGetNotifierPropertiesWebhookOutputWithContext(ctx context.Context) GetNotifierPropertiesWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifierPropertiesWebhookOutput)
}

type GetNotifierPropertiesWebhookOutput struct{ *pulumi.OutputState }

func (GetNotifierPropertiesWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifierPropertiesWebhook)(nil)).Elem()
}

func (o GetNotifierPropertiesWebhookOutput) ToGetNotifierPropertiesWebhookOutput() GetNotifierPropertiesWebhookOutput {
	return o
}

func (o GetNotifierPropertiesWebhookOutput) ToGetNotifierPropertiesWebhookOutputWithContext(ctx context.Context) GetNotifierPropertiesWebhookOutput {
	return o
}

// The webhook URL
func (o GetNotifierPropertiesWebhookOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifierPropertiesWebhook) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NotifierPropertiesInput)(nil)).Elem(), NotifierPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifierPropertiesPtrInput)(nil)).Elem(), NotifierPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifierPropertiesDiscordInput)(nil)).Elem(), NotifierPropertiesDiscordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifierPropertiesDiscordPtrInput)(nil)).Elem(), NotifierPropertiesDiscordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifierPropertiesDiscordWebhookInput)(nil)).Elem(), NotifierPropertiesDiscordWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifierPropertiesDiscordWebhookPtrInput)(nil)).Elem(), NotifierPropertiesDiscordWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifierPropertiesEmailInput)(nil)).Elem(), NotifierPropertiesEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifierPropertiesEmailPtrInput)(nil)).Elem(), NotifierPropertiesEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifierPropertiesOpsgenieInput)(nil)).Elem(), NotifierPropertiesOpsgenieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifierPropertiesOpsgeniePtrInput)(nil)).Elem(), NotifierPropertiesOpsgenieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifierPropertiesPagerdutyInput)(nil)).Elem(), NotifierPropertiesPagerdutyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifierPropertiesPagerdutyPtrInput)(nil)).Elem(), NotifierPropertiesPagerdutyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifierPropertiesSlackInput)(nil)).Elem(), NotifierPropertiesSlackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifierPropertiesSlackPtrInput)(nil)).Elem(), NotifierPropertiesSlackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifierPropertiesWebhookInput)(nil)).Elem(), NotifierPropertiesWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifierPropertiesWebhookPtrInput)(nil)).Elem(), NotifierPropertiesWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifierPropertiesInput)(nil)).Elem(), GetNotifierPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifierPropertiesDiscordInput)(nil)).Elem(), GetNotifierPropertiesDiscordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifierPropertiesDiscordWebhookInput)(nil)).Elem(), GetNotifierPropertiesDiscordWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifierPropertiesEmailInput)(nil)).Elem(), GetNotifierPropertiesEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifierPropertiesOpsgenieInput)(nil)).Elem(), GetNotifierPropertiesOpsgenieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifierPropertiesPagerdutyInput)(nil)).Elem(), GetNotifierPropertiesPagerdutyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifierPropertiesSlackInput)(nil)).Elem(), GetNotifierPropertiesSlackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifierPropertiesWebhookInput)(nil)).Elem(), GetNotifierPropertiesWebhookArgs{})
	pulumi.RegisterOutputType(NotifierPropertiesOutput{})
	pulumi.RegisterOutputType(NotifierPropertiesPtrOutput{})
	pulumi.RegisterOutputType(NotifierPropertiesDiscordOutput{})
	pulumi.RegisterOutputType(NotifierPropertiesDiscordPtrOutput{})
	pulumi.RegisterOutputType(NotifierPropertiesDiscordWebhookOutput{})
	pulumi.RegisterOutputType(NotifierPropertiesDiscordWebhookPtrOutput{})
	pulumi.RegisterOutputType(NotifierPropertiesEmailOutput{})
	pulumi.RegisterOutputType(NotifierPropertiesEmailPtrOutput{})
	pulumi.RegisterOutputType(NotifierPropertiesOpsgenieOutput{})
	pulumi.RegisterOutputType(NotifierPropertiesOpsgeniePtrOutput{})
	pulumi.RegisterOutputType(NotifierPropertiesPagerdutyOutput{})
	pulumi.RegisterOutputType(NotifierPropertiesPagerdutyPtrOutput{})
	pulumi.RegisterOutputType(NotifierPropertiesSlackOutput{})
	pulumi.RegisterOutputType(NotifierPropertiesSlackPtrOutput{})
	pulumi.RegisterOutputType(NotifierPropertiesWebhookOutput{})
	pulumi.RegisterOutputType(NotifierPropertiesWebhookPtrOutput{})
	pulumi.RegisterOutputType(GetNotifierPropertiesOutput{})
	pulumi.RegisterOutputType(GetNotifierPropertiesDiscordOutput{})
	pulumi.RegisterOutputType(GetNotifierPropertiesDiscordWebhookOutput{})
	pulumi.RegisterOutputType(GetNotifierPropertiesEmailOutput{})
	pulumi.RegisterOutputType(GetNotifierPropertiesOpsgenieOutput{})
	pulumi.RegisterOutputType(GetNotifierPropertiesPagerdutyOutput{})
	pulumi.RegisterOutputType(GetNotifierPropertiesSlackOutput{})
	pulumi.RegisterOutputType(GetNotifierPropertiesWebhookOutput{})
}
