// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.gfm.pulumiaxiom.axiom.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class NotifierPropertiesDiscordArgs extends com.pulumi.resources.ResourceArgs {

    public static final NotifierPropertiesDiscordArgs Empty = new NotifierPropertiesDiscordArgs();

    /**
     * The discord channel
     * 
     */
    @Import(name="discordChannel", required=true)
    private Output<String> discordChannel;

    /**
     * @return The discord channel
     * 
     */
    public Output<String> discordChannel() {
        return this.discordChannel;
    }

    /**
     * The discord token
     * 
     */
    @Import(name="discordToken", required=true)
    private Output<String> discordToken;

    /**
     * @return The discord token
     * 
     */
    public Output<String> discordToken() {
        return this.discordToken;
    }

    private NotifierPropertiesDiscordArgs() {}

    private NotifierPropertiesDiscordArgs(NotifierPropertiesDiscordArgs $) {
        this.discordChannel = $.discordChannel;
        this.discordToken = $.discordToken;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NotifierPropertiesDiscordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NotifierPropertiesDiscordArgs $;

        public Builder() {
            $ = new NotifierPropertiesDiscordArgs();
        }

        public Builder(NotifierPropertiesDiscordArgs defaults) {
            $ = new NotifierPropertiesDiscordArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param discordChannel The discord channel
         * 
         * @return builder
         * 
         */
        public Builder discordChannel(Output<String> discordChannel) {
            $.discordChannel = discordChannel;
            return this;
        }

        /**
         * @param discordChannel The discord channel
         * 
         * @return builder
         * 
         */
        public Builder discordChannel(String discordChannel) {
            return discordChannel(Output.of(discordChannel));
        }

        /**
         * @param discordToken The discord token
         * 
         * @return builder
         * 
         */
        public Builder discordToken(Output<String> discordToken) {
            $.discordToken = discordToken;
            return this;
        }

        /**
         * @param discordToken The discord token
         * 
         * @return builder
         * 
         */
        public Builder discordToken(String discordToken) {
            return discordToken(Output.of(discordToken));
        }

        public NotifierPropertiesDiscordArgs build() {
            if ($.discordChannel == null) {
                throw new MissingRequiredPropertyException("NotifierPropertiesDiscordArgs", "discordChannel");
            }
            if ($.discordToken == null) {
                throw new MissingRequiredPropertyException("NotifierPropertiesDiscordArgs", "discordToken");
            }
            return $;
        }
    }

}
