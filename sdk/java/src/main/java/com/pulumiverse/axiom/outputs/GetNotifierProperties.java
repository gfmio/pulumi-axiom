// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.gfm.pulumiaxiom.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import io.gfm.pulumiaxiom.outputs.GetNotifierPropertiesDiscord;
import io.gfm.pulumiaxiom.outputs.GetNotifierPropertiesDiscordWebhook;
import io.gfm.pulumiaxiom.outputs.GetNotifierPropertiesEmail;
import io.gfm.pulumiaxiom.outputs.GetNotifierPropertiesOpsgenie;
import io.gfm.pulumiaxiom.outputs.GetNotifierPropertiesPagerduty;
import io.gfm.pulumiaxiom.outputs.GetNotifierPropertiesSlack;
import io.gfm.pulumiaxiom.outputs.GetNotifierPropertiesWebhook;
import java.util.Objects;

@CustomType
public final class GetNotifierProperties {
    private GetNotifierPropertiesDiscord discord;
    private GetNotifierPropertiesDiscordWebhook discordWebhook;
    private GetNotifierPropertiesEmail email;
    private GetNotifierPropertiesOpsgenie opsgenie;
    private GetNotifierPropertiesPagerduty pagerduty;
    private GetNotifierPropertiesSlack slack;
    private GetNotifierPropertiesWebhook webhook;

    private GetNotifierProperties() {}
    public GetNotifierPropertiesDiscord discord() {
        return this.discord;
    }
    public GetNotifierPropertiesDiscordWebhook discordWebhook() {
        return this.discordWebhook;
    }
    public GetNotifierPropertiesEmail email() {
        return this.email;
    }
    public GetNotifierPropertiesOpsgenie opsgenie() {
        return this.opsgenie;
    }
    public GetNotifierPropertiesPagerduty pagerduty() {
        return this.pagerduty;
    }
    public GetNotifierPropertiesSlack slack() {
        return this.slack;
    }
    public GetNotifierPropertiesWebhook webhook() {
        return this.webhook;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNotifierProperties defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetNotifierPropertiesDiscord discord;
        private GetNotifierPropertiesDiscordWebhook discordWebhook;
        private GetNotifierPropertiesEmail email;
        private GetNotifierPropertiesOpsgenie opsgenie;
        private GetNotifierPropertiesPagerduty pagerduty;
        private GetNotifierPropertiesSlack slack;
        private GetNotifierPropertiesWebhook webhook;
        public Builder() {}
        public Builder(GetNotifierProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.discord = defaults.discord;
    	      this.discordWebhook = defaults.discordWebhook;
    	      this.email = defaults.email;
    	      this.opsgenie = defaults.opsgenie;
    	      this.pagerduty = defaults.pagerduty;
    	      this.slack = defaults.slack;
    	      this.webhook = defaults.webhook;
        }

        @CustomType.Setter
        public Builder discord(GetNotifierPropertiesDiscord discord) {
            if (discord == null) {
              throw new MissingRequiredPropertyException("GetNotifierProperties", "discord");
            }
            this.discord = discord;
            return this;
        }
        @CustomType.Setter
        public Builder discordWebhook(GetNotifierPropertiesDiscordWebhook discordWebhook) {
            if (discordWebhook == null) {
              throw new MissingRequiredPropertyException("GetNotifierProperties", "discordWebhook");
            }
            this.discordWebhook = discordWebhook;
            return this;
        }
        @CustomType.Setter
        public Builder email(GetNotifierPropertiesEmail email) {
            if (email == null) {
              throw new MissingRequiredPropertyException("GetNotifierProperties", "email");
            }
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder opsgenie(GetNotifierPropertiesOpsgenie opsgenie) {
            if (opsgenie == null) {
              throw new MissingRequiredPropertyException("GetNotifierProperties", "opsgenie");
            }
            this.opsgenie = opsgenie;
            return this;
        }
        @CustomType.Setter
        public Builder pagerduty(GetNotifierPropertiesPagerduty pagerduty) {
            if (pagerduty == null) {
              throw new MissingRequiredPropertyException("GetNotifierProperties", "pagerduty");
            }
            this.pagerduty = pagerduty;
            return this;
        }
        @CustomType.Setter
        public Builder slack(GetNotifierPropertiesSlack slack) {
            if (slack == null) {
              throw new MissingRequiredPropertyException("GetNotifierProperties", "slack");
            }
            this.slack = slack;
            return this;
        }
        @CustomType.Setter
        public Builder webhook(GetNotifierPropertiesWebhook webhook) {
            if (webhook == null) {
              throw new MissingRequiredPropertyException("GetNotifierProperties", "webhook");
            }
            this.webhook = webhook;
            return this;
        }
        public GetNotifierProperties build() {
            final var _resultValue = new GetNotifierProperties();
            _resultValue.discord = discord;
            _resultValue.discordWebhook = discordWebhook;
            _resultValue.email = email;
            _resultValue.opsgenie = opsgenie;
            _resultValue.pagerduty = pagerduty;
            _resultValue.slack = slack;
            _resultValue.webhook = webhook;
            return _resultValue;
        }
    }
}
